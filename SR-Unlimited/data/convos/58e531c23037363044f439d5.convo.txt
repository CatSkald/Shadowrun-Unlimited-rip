idRef {
  id: "58e531c23037363044f439d5"
}
ui_name: "run location-ag chemicals-airlock"
nodes {
  idRef {
    id: "58e531c63037363044f439db"
  }
  index: 0
  text: "Airlock Managar 1.0"
  branches {
    responseText: "Open Inner Door"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Inner"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Invert Bool"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "AirLock-MMU"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Outer"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Prop Visible"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "544aa9a0363735b004002408"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "DoesOrDoesNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Inner"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Close Inner Door"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Inner"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Prop Visible"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "544aa9a0363735b004002408"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "DoesOrDoesNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Inner"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Open Outer Door"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Outer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Invert Bool"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "AirLock-MMU"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Inner"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Outer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Prop Visible"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "544aa9a0363735b0040023da"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "DoesOrDoesNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Close Outer Door"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Outer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AirLock-Outer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Prop Visible"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "544aa9a0363735b0040023da"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "DoesOrDoesNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Hack MMU"
    nextNodeIndex: 1
  }
  branches {
    responseText: "{{GM}}Walk Away{{/GM}}"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e532e53037363044f439e7"
  }
  index: 1
  text: "{{GM}}This is a really bad idea{{/GM}}"
  branches {
    responseText: "{{GM}}continue{{/GM}}"
    nextNodeIndex: 2
  }
  branches {
    responseText: "{{GM}}Normal Operations{{/GM}}"
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Walk Away{{/GM}}"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e532f63037363044f439ea"
  }
  index: 2
  text: "Success!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AirLock-MMU"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
roots {
  nextNodeIndex: 0
}
