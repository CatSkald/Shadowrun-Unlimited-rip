idRef {
  id: "53fcd4b6386461b08300475c"
}
ui_name: "Run 301 (Vigor Collection)-Entry Goons"
nodes {
  idRef {
    id: "53fcd4d5386461b083004762"
  }
  index: 0
  text: "I\'m looking for whoever is in charge around here."
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isPlayer"
}
nodes {
  idRef {
    id: "53fcd623386461b08300477c"
  }
  index: 1
  text: "Yeah? And who the drek are you?"
  branches {
    responseText: "{{GM}}Fast Talk{{/GM}} Just here on business..."
    nextNodeIndex: 2
  }
  branches {
    responseText: "{{GM}}Ettiquette: Gang{{/GM}} Just here on business..."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Ettiquette_Bonus"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53fcd69d386461b083004782"
  }
  index: 2
  text: "I have a meeting with whoever is running this place, regarding some future business dealings."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Test_Fail"
            }
          }
        }
        args {
          string_value: "Well then you have to set up a meeting, just like everyone else."
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Test_Pass"
            }
          }
        }
        args {
          string_value: "Not really my department. Head to the top floor, and talk to the boss."
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Fast Talk Test"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isPlayer"
}
nodes {
  idRef {
    id: "53fcd69f386461b083004784"
  }
  index: 3
  text: "I\'m here on behalf of Mr. Boone, your boss\' boss, so get out of my way."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Test_Fail"
            }
          }
        }
        args {
          string_value: "If the boss isn\'t expecting you, I ain\'t letting you by."
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Test_Pass"
            }
          }
        }
        args {
          string_value: "Woah, just calm down. You can find him on the top floor."
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Fast Talk Test"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isPlayer"
}
nodes {
  idRef {
    id: "53fcd5a3386461b083004772"
  }
  index: 4
  text: "{{GM}}Ettiquette: Street{{/GM}}Hey guys. Mr. Boone has sent me to discuss finances with your boss."
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isPlayer"
}
nodes {
  idRef {
    id: "53fe29273864616c70005d8d"
  }
  index: 5
  text: "I need to get in and see your boss, one way or another."
  branches {
    responseText: ""
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isPlayer"
}
nodes {
  idRef {
    id: "53fe295d3864616c70005d90"
  }
  index: 6
  text: "Well that ain\'t gonna happen. I ain\'t letting you in."
  branches {
    responseText: "Fine."
    nextNodeIndex: -1
  }
  branches {
    responseText: "Attack"
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53fe29843864616c70005d94"
  }
  index: 7
  text: "Then I\'ll just go through you."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Agro"
            }
          }
        }
        args {
          float_value: 1
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isPlayer"
}
roots {
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 18
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedtoGoons_1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedtoGoons_1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 18
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedtoGoons_1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedtoGoons_1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 4
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedtoGoons_1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "SealedProp_1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 5
}
