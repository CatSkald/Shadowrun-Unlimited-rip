idRef {
  id: "523b025c336331b808004b0d"
}
ui_name: "Free Spirit"
nodes {
  idRef {
    id: "523c2cb5336331b808004d57"
  }
  index: 0
  text: ""
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "PowerCheck"
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "CalculateServices"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d5a"
  }
  index: 1
  text: ""
  branches {
    responseText: "I want to donate some living energy for services..."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "MetXalnu"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "ThePower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
  }
  branches {
    responseText: "I want to donate some of my earthly knowledge..."
    nextNodeIndex: 3
    hideIfUnavailable: true
  }
  branches {
    responseText: "I want to donate some living energy for services..."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "ThePower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Fade Camera Out"
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Fade Camera In"
        args {
          float_value: 1
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "player"
            }
            args {
              string_value: "Healing"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  branches {
    responseText: "I want to make a deal..."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "MetXalnu"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    actions {
      ops {
        functionName: "Display Text over Actor"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TextPopupStyle"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Spirit_Services"
                }
              }
            }
          }
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Display Text over Actor"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TextPopupStyle"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Spirit Services"
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
        args {
          float_value: 0
        }
        args {
          float_value: 3
        }
        args {
          float_value: 3
        }
        args {
          float_value: 0.5
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "MetXalnu"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 19
    hideIfUnavailable: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "PowerCheck"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "INT Check"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "QUICK Check"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "STR Check"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "WILL Check"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "CHA Check"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d70"
  }
  index: 2
  text: "I\'m sorry, but you are still too weak. {{GM}}You must possess at least 3 in all attributes to donate living energy{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52a0faba336331a83e00091c"
  }
  index: 3
  text: "What knowledge do you wish to part with?"
  branches {
    responseText: "Knowledge of The Mind"
    nextNodeIndex: 4
  }
  branches {
    responseText: "Knowledge of The Will"
    nextNodeIndex: 5
  }
  branches {
    responseText: "Knowledge of Personality"
    nextNodeIndex: 6
  }
  branches {
    responseText: "Knowledge of Strength"
    nextNodeIndex: 7
  }
  branches {
    responseText: "Knowledge of Speed"
    nextNodeIndex: 8
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52a0fb68336331a83e000926"
  }
  index: 4
  text: "This will reduce your Decking, Biotech, and Drone Control skills by two points.\n\n{{GM}}The skill ratings of each skill must be three or higher{{/GM}}"
  branches {
    responseText: "Proceed."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "INTPower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Bargain INT"
            }
          }
        }
      }
      ops {
        functionName: "Fade Camera Out"
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Fade Camera In"
        args {
          float_value: 1
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "player"
            }
            args {
              string_value: "Healing"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52a0ff4d336331540f005596"
  }
  index: 5
  text: "This will reduce your Spellcasting and Chi Casting skills by two points.\n\n{{GM}}The skill ratings of each skill must be three or higher{{/GM}}"
  branches {
    responseText: "Proceed."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "WILLpower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Bargain WILL"
            }
          }
        }
      }
      ops {
        functionName: "Fade Camera Out"
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Fade Camera In"
        args {
          float_value: 1
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "player"
            }
            args {
              string_value: "Healing"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52a0ff8a336331540f0055a8"
  }
  index: 6
  text: "This will reduce your Summoning and Conjuring skills by two points.\n\n{{GM}}The skill ratings of each skill must be three or higher{{/GM}}"
  branches {
    responseText: "Proceed."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "CHApower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Bargain CHA"
            }
          }
        }
      }
      ops {
        functionName: "Fade Camera Out"
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Fade Camera In"
        args {
          float_value: 1
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "player"
            }
            args {
              string_value: "Healing"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52a0ffae336331540f0055ae"
  }
  index: 7
  text: "This will reduce your Close Combat and Throwing skills by two points.\n\n{{GM}}The skill ratings of each skill must be three or higher{{/GM}}"
  branches {
    responseText: "Proceed."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "STRpower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Bargain STR"
            }
          }
        }
      }
      ops {
        functionName: "Fade Camera Out"
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Fade Camera In"
        args {
          float_value: 1
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "player"
            }
            args {
              string_value: "Healing"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52a0ffd7336331540f0055b4"
  }
  index: 8
  text: "This will reduce your Ranged Combat and Dodge skills by two points.\n\n{{GM}}The skill ratings of each skill must be three or higher{{/GM}}"
  branches {
    responseText: "Proceed."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "QUICKpower"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Bargain QUICK"
            }
          }
        }
      }
      ops {
        functionName: "Fade Camera Out"
        args {
          float_value: 1
        }
        args {
          float_value: 0
        }
      }
      ops {
        functionName: "Fade Camera In"
        args {
          float_value: 1
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "player"
            }
            args {
              string_value: "Healing"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d7a"
  }
  index: 9
  text: "Excellent... you energy is magnificent!"
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "TheBargain"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d73"
  }
  index: 10
  text: "It seems I owe you some services..."
  branches {
    responseText: "Yes, let\'s deal."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Potential"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "CalculateServices"
            }
          }
        }
      }
    }
    nextNodeIndex: 11
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d76"
  }
  index: 11
  text: "Well of course... what would interest you?"
  branches {
    responseText: "I want wealth!"
    nextNodeIndex: 12
  }
  branches {
    responseText: "I want greater healing abilties!"
    nextNodeIndex: 13
  }
  branches {
    responseText: "I want to be fast!"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "SuperSpeed"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
  }
  branches {
    responseText: "I want to be even faster!"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "SuperSpeed"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
  }
  branches {
    responseText: "I want my punches to be strong enough to reduce concrete to dust!"
    nextNodeIndex: 16
  }
  branches {
    responseText: "I want to recover some of my magical power that has diminished when I purchased Cyberware."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 7
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    nextNodeIndex: 17
  }
  branches {
    responseText: "I want peace."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Notoriety"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Heat"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 18
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Spirit_Services"
              }
            }
          }
        }
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Spirit Services"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "523c3447336331b808005017"
  }
  index: 12
  text: "As a single service I can give you 10000 Nuyen that I have accumulated. I have little need for such things."
  branches {
    responseText: "You have a deal."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -1
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 10000
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c279f336331b80800513f"
  }
  index: 13
  text: "For two services I can create an astral link between us, providing you with regenerative powers. This Pact of Health is a potent service, sought greatly by mortals. {{GM}}This can be taken multiple times with a stacking effect.{{/GM}}"
  branches {
    responseText: "That sounds great!"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "HealthDeal"
            }
          }
        }
      }
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "HealthPact"
            }
          }
        }
        args {
          float_value: 1
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -2
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t think so."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2d5e336331b808005283"
  }
  index: 14
  text: "I can make your steps quicker with a lesser Pact of Haste for three services."
  branches {
    responseText: "Deal!"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Actor Run Speed"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "RunSpeedMethod"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -3
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "SuperSpeed"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Lesser Haste Pact"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t think so."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c29d3336331e437002bd9"
  }
  index: 15
  text: "A greater Haste pact would allow you to move at supernatural speeds for five services."
  branches {
    responseText: "Deal!"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 5
        }
      }
    }
    actions {
      ops {
        functionName: "Set Actor Run Speed"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "RunSpeedMethod"
            }
            args {
              int_value: 4
            }
          }
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -5
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "SuperSpeed"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Greater Pact of Haste"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Lesser Haste Pact"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t think so."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2ca1336331e437002c5d"
  }
  index: 16
  text: "For a service I can grant a gift akin to Killing Hands. You strikes will be imbued with mystic energy, and your body will become a lethal weapon."
  branches {
    responseText: "That sounds great!"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -1
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Pact of Strength"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Apply Condition Status Effect to Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "StatusCondition"
            }
            args {
              int_value: 12
            }
          }
        }
        args {
          string_value: ""
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BuffDebuffType"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: -1
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t think so."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c3184336331e437002ce6"
  }
  index: 17
  text: "For three services I can create a Geas Pact between us. Your spells you will also draw upon a portion of my own power to supplement what you have lost... {{GM}}This Pact can be taken many times, with a stacking effect{{/GM}}"
  branches {
    responseText: "I accept."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -3
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "GeasPact"
            }
          }
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t think so."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c27a3336331e437002ece"
  }
  index: 18
  text: "For a service I can influence the minds of those who would pursue you. They would lose interest in you, for now... {{GM}}This will reduce Notoriety and Heat to 0{{/GM}}"
  branches {
    responseText: "I accept."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Spirit_Services"
            }
          }
        }
        args {
          int_value: -1
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Notoriety"
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Heat"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\'t think so."
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d5d"
  }
  index: 19
  text: "You.... I sense a unique potential in you. Come closer..."
  branches {
    responseText: "Who... what are you?"
    nextNodeIndex: 20
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d60"
  }
  index: 20
  text: "My name is Xalthu. I am what some of your kind would consider a \"free spirit\". I manifest in this plane of my own free will."
  branches {
    responseText: "So no one summoned you? Then why are you here?"
    nextNodeIndex: 21
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d63"
  }
  index: 21
  text: "I crave what most sentient things crave; power. This realm is full of untapped power, but I am unable to harvest it on my own... Would you be willing to help me?"
  branches {
    responseText: "Help you how?"
    nextNodeIndex: 22
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d66"
  }
  index: 22
  text: "Have you ever heard of a Spirit Pact? It is when a willing metahuman enters into a symbiotic bond with one of my kind. We spirits cannot grow and flourish as your kind does. We must be fed living energy by a partner. In exchange we offer to share our power with those who feed us.  I would ask that you enter into this pact with me, so we can both grow powerful."
  branches {
    responseText: "I don\'t like the sound of \"feeding you my living energy\"..."
    nextNodeIndex: 23
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d69"
  }
  index: 23
  text: "Although it is true that you will become weaker with each exchange, you metahumans have the ability to recover that lost power simply by existing. That is why you are perfect partners, you can generate the energy we spirits so desperately crave, but it must be given over willingly. It is rare for one of my kind to find someone such as yourself, who shows such raw potential. Please, I beg you! If you enter this pact and I can grant you many boons..."
  branches {
    responseText: "What kind of \"boons\" are we talking here?"
    nextNodeIndex: 24
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523c2cb5336331b808004d6c"
  }
  index: 24
  text: "Wealth, Power, Health, Knowledge, almost anything you can desire. When you are willing I will siphon off some of your Karmic Energy. When enough Karmic Energy is siphoned off, I will grant you a service. You can then barter these services with me in exchange for a boon or pact of your choosing..."
  branches {
    responseText: "Let me think about it..."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "MetXalnu"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  nextNodeIndex: 0
}
